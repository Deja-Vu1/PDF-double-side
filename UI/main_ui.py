# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PySide2 import QtCore, QtGui, QtWidgets
from PySide2 import Qt
import sys
import os
from Methods.getNamesofPDF import find_ext

file = sys.argv[0]
dirname = os.path.dirname(file)


class Ui_Form(object):
    def setupUi(self, Form):
        self.Form = Form
        Form.setObjectName("Form")
        Form.resize(700, 550)
        Form.setMinimumSize(QtCore.QSize(700, 550))
        Form.setMaximumSize(QtCore.QSize(700, 550))
        Form.setWindowFlags(QtCore.Qt.FramelessWindowHint)
        Form.setAttribute(QtCore.Qt.WA_TranslucentBackground)
        self.frame = QtWidgets.QFrame(Form)
        self.frame.setGeometry(QtCore.QRect(29, 53, 641, 444))
        self.frame.setMinimumSize(QtCore.QSize(641, 444))
        self.frame.setMaximumSize(QtCore.QSize(641, 444))
        self.frame.setStyleSheet("border:5px solid rgb(255, 33, 22);\n"
                                 "border-radius: 20;\n"
                                 "background-color: rgb(245, 245, 245);")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.pushButton = QtWidgets.QPushButton(self.frame)
        self.pushButton.setGeometry(QtCore.QRect(326, 380, 115, 48))
        self.pushButton.setMinimumSize(QtCore.QSize(115, 48))
        self.pushButton.setStyleSheet("#pushButton{\n"
                                      "border-radius:20px;\n"
                                      "border-top-left-radius:0px;\n"
                                      "border-bottom-left-radius:0px;\n"
                                      "background-color: rgb(189, 25, 17);\n"
                                      "color: rgb(255, 154, 149);\n"
                                      "font: 75 20pt \"PT Sans\";\n"
                                      "border:0;\n"
                                      "}\n"
                                      "#pushButton:hover{\n"
                                      "background-color: rgb(178, 23, 15);\n"
                                      "}")
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.frame)
        self.pushButton_2.setGeometry(QtCore.QRect(196, 380, 115, 48))
        self.pushButton_2.setMinimumSize(QtCore.QSize(115, 48))
        self.pushButton_2.setStyleSheet("#pushButton_2{\n"
                                        "border-radius:0px;\n"
                                        "border-top-left-radius:20px;\n"
                                        "border-bottom-left-radius:20px;\n"
                                        "background-color: rgb(255, 154, 149);\n"
                                        "color: rgb(189, 25, 17);\n"
                                        "font: 75 20pt \"PT Sans\";\n"
                                        "border:0;\n"
                                        "}\n"
                                        "#pushButton_2:hover{\n"
                                        "background-color: rgb(242, 146, 141);\n"
                                        "}")
        self.pushButton_2.setObjectName("pushButton_2")
        self.label_2 = QtWidgets.QLabel(self.frame)
        self.label_2.setGeometry(QtCore.QRect(292, 180, 61, 61))
        self.label_2.setStyleSheet("border:0;\n"
                                   "background-color: rgba(255, 255, 255,0);")
        self.label_2.setText("")
        self.label_2.setPixmap(QtGui.QPixmap(os.path.join(dirname, "../Images/arrow.png")))
        self.label_2.setObjectName("label_2")
        self.listWidget = QtWidgets.QListWidget(self.frame)
        self.listWidget.setDragDropMode(self.listWidget.DragDrop)
        self.listWidget.setSelectionMode(self.listWidget.ExtendedSelection)
        self.listWidget.setAcceptDrops(True)

        for text in find_ext(dirname + "/../Sources/", "pdf"):
            self.listWidget.addItem(text[text.find("/../Sources/")+12:])

        self.listWidget.setGeometry(QtCore.QRect(20, 60, 261, 301))
        self.listWidget.setStyleSheet("border-color: rgb(255, 154, 149);")
        self.listWidget.setObjectName("listWidget")
        self.listWidget_2 = QtWidgets.QListWidget(self.frame)
        self.listWidget_2.setDragDropMode(self.listWidget_2.DragDrop)
        self.listWidget_2.setSelectionMode(self.listWidget_2.ExtendedSelection)
        self.listWidget_2.setAcceptDrops(True)

        self.listWidget_2.setGeometry(QtCore.QRect(360, 60, 261, 301))
        self.listWidget_2.setStyleSheet("border-color: rgb(255, 154, 149);")
        self.listWidget_2.setObjectName("listWidget_2")
        self.label = QtWidgets.QLabel(Form)
        self.label.setGeometry(QtCore.QRect(310, 10, 81, 111))
        self.label.setStyleSheet("border:0;\n"
                                 "background-color: rgba(255, 255, 255,0);")
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap(os.path.join(dirname, "../Images/pnglogo.png")))
        self.label.setObjectName("label")

        self.pushButton_2.clicked.connect(self.close)
        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.pushButton.setText(_translate("Form", "DONE"))
        self.pushButton_2.setText(_translate("Form", "CANCEL"))

    def dropEvent(self, event):
        if event.source() == self:
            event.setDropAction(QtCore.Qt.MoveAction)
            QtWidgets.QListWidget.dropEvent(self, event)
        elif isinstance(event.source(), QtWidgets.QListWidget):
            item = self.itemAt(event.pos())
            row = self.row(item) if item else self.count()
            ba = event.mimeData().data('application/x-qabstractitemmodeldatalist')
            data_items = decode_data(ba)
            for i, data_item in enumerate(data_items):
                it = QtWidgets.QListWidgetItem()
                self.insertItem(row + i, it)
                for r, v in data_item.items():
                    it.setData(r, v)
    def close(self):
        self.Form.close()

def decode_data(bytearray):
    data = []
    item = {}

    ds = QtCore.QDataStream(bytearray)
    while not ds.atEnd():

        row = ds.readInt32()
        column = ds.readInt32()

        map_items = ds.readInt32()
        for i in range(map_items):
            key = ds.readInt32()

            value = QtCore.QVariant()
            ds >> value
            item[Qt.ItemDataRole(key)] = value

        data.append(item)
    return data


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
